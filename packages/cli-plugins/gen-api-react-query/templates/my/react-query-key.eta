<%
const { utils, route, config, modelTypes,dataFromApiTemplate } = it;
const routes = route.routes;
const { getConfigByRoute ,queryKeyName } = dataFromApiTemplate;
%>
export const <%= queryKeyName %> = {
  <% routes.forEach((route) => { %>
    <% 
      const {
        conditions:{
          hasPagination,
          isQuery,
          isMutation,
          isOptialnalVariabels,
        },
        data: {
          rawWrapperArgs,
          wrapperArgs,
          functionName,
          apiInstanceName,
          apiClassName,
          hookVariant,
          key,
          methodKey,
        },
        utils: {
          upperSnakeCase,
          removeModuleName,
          argToTmpl,
        }
      } = getConfigByRoute(route);
      const conditionalParam = isQuery ?  `(variables? : Parameter<typeof ${apiInstanceName}.${functionName}>)`: "()"
      const conditionalHookKeyVariant = isQuery ? "variables" : ""
    %>
    <%~ methodKey %>: <%~ conditionalParam %> => ["<%~ key %>", <%~ conditionalHookKeyVariant %>].filter(key => typeof key !== 'undefined'),
    <% if(hasPagination) { %>
     <%~ methodKey %>_INFINITE : <%~ conditionalParam %> => ["<%~ key %>_INFINITE", <%~ conditionalHookKeyVariant %>].filter(key => typeof key !== 'undefined'),
    <% }%>
  <% }) %>
}; 






