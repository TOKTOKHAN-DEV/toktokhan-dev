{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.47.7",
    "schemaVersion": 1011,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "@toktokhan-dev/zustand-create-store-context!",
  "docComment": "/**\n * zustand와 함께 사용할 수 있는 `createStoreContext` 유틸리티 패키지입니다. zustand 스토어에 대한 context, provider, hoc 를 생성함으로써, Zustand를 사용한 지역 상태 관리를 가능하게 합니다.\n *\n * @packageDocumentation\n */\n",
  "name": "@toktokhan-dev/zustand-create-store-context",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@toktokhan-dev/zustand-create-store-context!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Function",
          "canonicalReference": "@toktokhan-dev/zustand-create-store-context!createStoreContext:function(1)",
          "docComment": "/**\n  *\n * zustand 와 함께 사용할 수 있는 `createStoreContext` 함수를 제공합니다. 지역적인 상태를 zustand 로 관리할 수 있습니다.\n *\n * @example\n * ```tsx\n * import { createStoreContext } from '@toktokhan-dev/zustand-create-store-context'\n *\n * const {\n *   Provider: CountProvider,\n *   useContext: useCountContext,\n *   withProvider: withCountProvider,\n * } = createStoreContext((set, get, store) => ({\n *   count: 0,\n *   setCount: (count: number) =>\n *     set(() => {\n *       count\n *     }),\n * }))\n *\n * const Component = () => {\n *  const count = useCountContext((store) => store.count)\n *  const setCount = useCountContext((store) => store.setCount)\n *\n *  return (\n *    <div>\n *      <button onClick={() => setCount(count + 1)}>+</button>\n *      <span>{count}</span>\n *    </div>\n *  )\n * }\n *\n *  const Component2 = withProvider(Component)\n *\n * const App = () => {\n *   return (\n *     <>\n *       <CountProvider>\n *         <Component />\n *       </CountProvider>\n *\n *      <Component2 />\n *\n *      <CountProvider initialState={{ count: 10 }}>\n *        <Component />\n *      </CountProvider>\n *\n *       {withCountProvider(Component, { count: 10 })}\n *     </>\n *   )\n * }\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "createStoreContext: <T, Mos extends "
            },
            {
              "kind": "Content",
              "text": "["
            },
            {
              "kind": "Reference",
              "text": "StoreMutatorIdentifier",
              "canonicalReference": "zustand!StoreMutatorIdentifier:type"
            },
            {
              "kind": "Content",
              "text": ", unknown][]"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": ">(initializer: "
            },
            {
              "kind": "Reference",
              "text": "StateCreator",
              "canonicalReference": "zustand!StateCreator:type"
            },
            {
              "kind": "Content",
              "text": "<T, [], Mos>"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "CreateStoreContextReturn",
              "canonicalReference": "@toktokhan-dev/zustand-create-store-context!CreateStoreContextReturn:interface"
            },
            {
              "kind": "Content",
              "text": "<T, Mos>"
            }
          ],
          "fileUrlPath": "dist/index.doc.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 10,
            "endIndex": 12
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "initializer",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "Mos",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            }
          ],
          "name": "createStoreContext"
        },
        {
          "kind": "Interface",
          "canonicalReference": "@toktokhan-dev/zustand-create-store-context!CreateStoreContextReturn:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface CreateStoreContextReturn<T, Mos extends "
            },
            {
              "kind": "Content",
              "text": "["
            },
            {
              "kind": "Reference",
              "text": "StoreMutatorIdentifier",
              "canonicalReference": "zustand!StoreMutatorIdentifier:type"
            },
            {
              "kind": "Content",
              "text": ", unknown][]"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "dist/index.doc.d.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "Mos",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            }
          ],
          "name": "CreateStoreContextReturn",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@toktokhan-dev/zustand-create-store-context!CreateStoreContextReturn#Provider:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Provider: "
                },
                {
                  "kind": "Reference",
                  "text": "FunctionComponent",
                  "canonicalReference": "@types/react!React.FunctionComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<{\n    children: "
                },
                {
                  "kind": "Reference",
                  "text": "ReactNode",
                  "canonicalReference": "@types/react!React.ReactNode:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    initial?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<T>;\n  }>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Provider",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@toktokhan-dev/zustand-create-store-context!CreateStoreContextReturn#useContext:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "useContext: "
                },
                {
                  "kind": "Reference",
                  "text": "UseBoundStore",
                  "canonicalReference": "zustand!UseBoundStore:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Mutate",
                  "canonicalReference": "zustand!Mutate:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "StoreApi",
                  "canonicalReference": "zustand!StoreApi:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T>, Mos>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "useContext",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@toktokhan-dev/zustand-create-store-context!CreateStoreContextReturn#withProvider:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "withProvider: "
                },
                {
                  "kind": "Content",
                  "text": "<P extends object>(Component: "
                },
                {
                  "kind": "Reference",
                  "text": "ComponentType",
                  "canonicalReference": "@types/react!React.ComponentType:type"
                },
                {
                  "kind": "Content",
                  "text": "<P>, initial?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<T>) => "
                },
                {
                  "kind": "Reference",
                  "text": "FunctionComponent",
                  "canonicalReference": "@types/react!React.FunctionComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<P>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "withProvider",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              }
            }
          ],
          "extendsTokenRanges": [],
          "parameters": []
        }
      ]
    }
  ]
}